---
- name: Set services
  set_fact:
    compose_services:
      version: "3.9"
      networks:
        net_01:
      services:
        postgres:
          image: agostops/agoston-postgres:v15.2.0
          user: "{{ postgres_user_id }}:{{ postgres_group_id }}"
          command: >
            -c search_path='agoston_public,agoston_api,agoston_identity,agoston_metadata,public'
            -c shared_preload_libraries='pg_cron'
            -c cron.database_name='agoston'
            -c timezone='{{ time_zone }}'
            -c tcp_keepalives_idle=60
            -c hba_file=/var/lib/postgresql/data/pg_hba.conf
            -c ssl=on
            -c ssl_ciphers=HIGH
            -c ssl_cert_file=/var/lib/postgresql/data/server.crt
            -c ssl_key_file=/var/lib/postgresql/data/server.key
          environment:
            - POSTGRES_DB=agoston
            - POSTGRES_PASSWORD={{ stack_services.postgres.postgres_password }}
            - PGDATA=/var/lib/postgresql/data/pgdata
          volumes:
            - /etc/passwd:/etc/passwd:ro
            - "{{ persistent_pgdata_path }}:/var/lib/postgresql/data"
          deploy:
            placement:
              constraints:
                - node.labels.{{ backend_uuid }}_postgres_node_type==rw
            restart_policy:
              condition: on-failure
              delay: 5s
              max_attempts: 3
              window: 120s
            resources:
              limits:
                cpus: "{{ stack_services.postgres.resources.limits.cpus }}"
                memory: "{{ stack_services.postgres.resources.limits.memory }}"
              reservations:
                cpus: "{{ stack_services.postgres.resources.reservations.cpus }}"
                memory: "{{ stack_services.postgres.resources.reservations.memory }}"
          sysctls:
            - net.ipv4.tcp_keepalive_time=60
          networks:
            - net_01
          ports:
            - "{{ stack_services.postgres.http_port_listening }}:5432"

        graphile:
          depends_on:
            - postgres
          image: agostops/agoston-graphile:v1.10.0
          environment:
            - ENVIRONMENT_NAME={{ stack_services.graphile.environment }}
            - HTTP_PORT_LISTENING=4000
            - HTTP_BACKEND_ORIGIN={{ stack_services.graphile.http.backend_origin }}
            - PGHOST=postgres
            - PGDATABASE=agoston
            - POSTGRES_PASSWORD={{ stack_services.postgres.postgres_password }}
            - POSTGRAPHILE_PASSWORD={{ stack_services.postgres.graphile_password }}
            - DEVELOPER_PASSWORD={{ stack_services.postgres.developer_password }}
            - POSTGRAPHILE_DB_SCHEMA=agoston_public
            - CORS_ORIGIN={{ stack_services.graphile.cors_origin }}
            - RECAPTCHA_SCORE_THRESHOLD={{ stack_services.graphile.recaptcha.score_threshold }}
            - RECAPTCHA_SECRET_KEY={{ stack_services.graphile.recaptcha.secret_key }}
            - SESSION_COOKIE_SECRET={{ stack_services.graphile.session_cookie_secret }}
            - AUTH_STRATEGIES={{ stack_services.graphile.auth.strategies|to_json(ensure_ascii=False)|string }}
            - STRIPE_HOOK_ENABLE={{ stack_services.graphile.stripe.hook_enable }}
            - STRIPE_API_KEY={{ stack_services.graphile.stripe.api_key }}
            - STRIPE_HOOK_ENDPOINT_SECRET={{ stack_services.graphile.stripe.hook_endpoint_secret }}
            - NODE_ENV=production
          deploy:
            restart_policy:
              condition: on-failure
              delay: 5s
              max_attempts: 3
              window: 120s
            resources:
              limits:
                cpus: "{{ stack_services.graphile.resources.limits.cpus }}"
                memory: "{{ stack_services.graphile.resources.limits.memory }}"
              reservations:
                cpus: "{{ stack_services.graphile.resources.reservations.cpus }}"
                memory: "{{ stack_services.graphile.resources.reservations.memory }}"
          sysctls:
            - net.ipv4.tcp_keepalive_time=60
          networks:
            - net_01
          ports:
            - "{{ stack_services.graphile.http_port_listening }}:4000"

- debug: var=compose_services
  when: debug|bool
